<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>my-project</groupId>
    <artifactId>exercise</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <springversion>4.3.21.RELEASE</springversion>
        <junitversion>3.8.1</junitversion>
        <slf4j.version>1.7.7</slf4j.version>
        <logback.version>1.2.3</logback.version>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junitversion}</version>
            <scope>test</scope>
        </dependency>

        <!-- spring核心包 -->
        <!--核心包-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${springversion}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${springversion}</version>
        </dependency>
        <!--测试包-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${springversion}</version>
        </dependency>
        <!--远端调用协议的包  里面有httpQuest等对象-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${springversion}</version>
        </dependency>
        <!--映射包  xml 和 object对象之间的映射-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${springversion}</version>
        </dependency>
        <!--数据库包  在整理数据库的时候再说-->

        <!--事务包-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${springversion}</version>
        </dependency>

        <!--MVC包  事后再说-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${springversion}</version>
        </dependency>
        <!--切面包事务包  其中 aspect整个里面的注解和标签需要-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${springversion}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.6.8</version>
        </dependency>



        <!---->
        <dependency>
            <groupId>org.logback-extensions</groupId>
            <artifactId>logback-ext-spring</artifactId>
            <version>0.1.2</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.12</version>
        </dependency>
        <!---->

        <!--&lt;!&ndash; *****logback start**** &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.slf4j</groupId>-->
            <!--<artifactId>slf4j-api</artifactId>-->
            <!--<version>${slf4j.version}</version>-->
            <!--<scope>compile</scope>-->
        <!--</dependency>-->
        <!--&lt;!&ndash; 是用来把Spring源代码中大量使用到的commons-logging替换成slf4j，-->
            <!--只有在添加了这个依赖之后才能看到Spring框架本身打印的日志，否则只能看到开发者自己打印的日志 &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.slf4j</groupId>-->
            <!--<artifactId>jcl-over-slf4j</artifactId>-->
            <!--<version>${slf4j.version}</version>-->
            <!--<scope>compile</scope>-->
        <!--</dependency>-->
        <!--&lt;!&ndash; logback-classic包含了slf4j-api.jar,logback-core.jar及logback-classic.jar &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>ch.qos.logback</groupId>-->
            <!--<artifactId>logback-classic</artifactId>-->
            <!--<version>${logback.version}</version>-->
        <!--</dependency>-->
        <!-- 是由官方提供的对Spring的支持 -->
        <!--<dependency>-->
            <!--<groupId>org.logback-extensions</groupId>-->
            <!--<artifactId>logback-ext-spring</artifactId>-->
            <!--<version>${logback-spring.version}</version>-->
        <!--</dependency>-->




        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.42.Final</version>
        </dependency>

    </dependencies>

    <!-- findbugs插件 -->
    <!--<build>-->
        <!--<plugins>-->
            <!--<plugin>-->
                <!--<groupId>org.codehaus.mojo</groupId>-->
                <!--<artifactId>findbugs-maven-plugin</artifactId>-->
                <!--<version>3.0.5</version>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash; 设置分析工作的等级，可以为Min、Default和Max &ndash;&gt;-->
                    <!--<effort>Low</effort>-->
                    <!--&lt;!&ndash; Low、Medium和High (Low最严格) High只扫描严重错误。建议用Medium&ndash;&gt;-->
                    <!--<threshold>High</threshold>-->
                    <!--<failOnError>true</failOnError>-->
                    <!--<includeTests>true</includeTests>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>run-findbugs</id>-->
                        <!--&lt;!&ndash; 在package(也可设为compile) 阶段触发执行findbugs检查，比如执行 mvn clean package &ndash;&gt;-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>check</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
        <!--</plugins>-->
    <!--</build>-->

    <modules>
        <module>mybatis</module>
        <module>custom</module>
        <module>dailyPractice</module>
        <module>api</module>
        <module>springMvc</module>
        <module>nio</module>
    </modules>


</project>